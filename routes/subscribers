const express = require('express');
const Subscriber = require('../models/subscriber')

const router = express.Router();

            //the get request handler
router.get('/', async (req, res)=>{
 try{
  const suscribers = await Subscriber.find()
  res.json(suscribers)
 } catch (err) {
  res.status(500).json({message: err.message})
}
})
        //lets get a specific user based on userId
router.get('/:id', getSubscriber, (req, res)=> {
  res.json(res.subscriber)

  
})
        // the post request handler
router.post('/', async (req, res)=> {
  
  const subscriber = new Subscriber({
    name: req.body.name,
    subscribedToChannel: req.body.subscribedToChannel
    
  })
  try{
    const newSubscriber = await subscriber.save()
    res.status(201).json(newSubscriber)
  }
  catch (err){
    res.status(400).json({message: err.message})
    
  }
})
             //the patch request handler
router.patch('/:id', getSubscriber, async (req, res) => {
  if(req.body.name != null){
    res.subscriber.name = req.body.name
  }
  if(req.body.subscribedToChannel != null){
    res.subscriber.subscribedToChannel = req.body.subscribedToChannel
  }

  try{
    const updatedSubscriber = await res.subscriber.save()
    res.json(updatedSubscriber)
  } catch(err) {
    res.status(400).json({message: err.message})
  }
})
        //the delete request handler
router.delete('/:id',  getSubscriber, async (req, res)=> {
  try{
    await res.subscriber.remove()
    res.json({message: "subscriber deleted"})
  } catch (err){
    res.status(500).json({message: err.message})
  }
})
 

          /// lets get a single subscriber by ID
async function getSubscriber(req, res, next) {
  let subscriber 
  try {
    subscriber = await Subscriber.findById(req.params.id)
    if(subscriber == null){
      return res.status(404).json({message: "can not find subscriber in the database"})
    }
  } catch (err){
    return res.status(500).json({message: err.message})
  }
  res.subscriber = subscriber
  next()
}


module.exports = router;